{"mode":"Text","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ninertial Inertial20 = inertial(PORT20);\n\nmotor LeftMotor = motor(PORT1, ratio18_1, false);\n\nmotor RightMotor = motor(PORT10, ratio18_1, true);\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n#pragma endregion VEXcode Generated Robot Configuration\n\n/*----------------------------------------------------------------------------*/\n/*                                                                            */\n/*    Module:       main.cpp                                                  */\n/*    Author:       {author}                                                  */\n/*    Created:      {date}                                                    */\n/*    Description:  V5 project                                                */\n/*                                                                            */\n/*----------------------------------------------------------------------------*/\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nvoid driveForward() {\n  LeftMotor.spinFor(forward, 720, degrees);\n  if (LeftMotor.isSpinning()) {\n    RightMotor.spin(forward);\n  }\n  else {\n    RightMotor.stop();\n  }\n}\n\nint main() {\n  //Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n  Inertial20.calibrate();\n  //Waiting for the Inertial Sensor to calibrate\n  while (Inertial20.isCalibrating()) {\n    wait(100, msec);\n  }\n  //Drive Forward and wait\n  driveForward();\n  wait(1, seconds);\n  //Turn the robot to the right\n  LeftMotor.spin(forward);\n  RightMotor.spin(reverse);\n  //Wait until the motors reach a 90 degree turn then stop the motors\n  waitUntil((Inertial20.rotation(degrees) >= 90.0));\n  LeftMotor.stop();\n  RightMotor.stop();\n  wait(1, seconds);\n}","textLanguage":"cpp","rconfig":[{"port":[20],"name":"Inertial20","customName":false,"deviceType":"Inertial","deviceClass":"inertial","setting":{}},{"port":[1],"name":"LeftMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[10],"name":"RightMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.6","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}